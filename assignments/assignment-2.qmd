---
title: "Assignment 2"
---

1.  Filtering

```{r}

library(rvest)
library(stringr)
library(dplyr)
library(ggplot2)
library(knitr)


url_vec_1 <- "https://m.imdb.com/search/title/?title_type=feature&release_date=2010-01-01,2023-12-31&num_votes=2500,&country_of_origin=TR&count=250"
url_vec_2 <- "https://m.imdb.com/search/title/?title_type=feature&release_date=,2009-12-31&num_votes=2500,&country_of_origin=TR&count=250"


```

2.  Data Frame Creating

```{r}

#reading html 
html_1 <- read_html(url_vec_1)
html_2 <- read_html(url_vec_2)

```

```{r}
#title
title_names_1 <- html_1 |> html_nodes(".ipc-title__text")
title_names_1 <- html_text(title_names_1)
title_names_1 <- tail(head(title_names_1,-1),-1)
title_names_1 <- str_split(title_names_1, " ", n=2)
title_names_1 <- unlist(lapply(title_names_1, function(x) {x[2]}))

title_names_2 <- html_2 |> html_nodes(".ipc-title__text")
title_names_2 <- html_text(title_names_2)
title_names_2 <- tail(head(title_names_2,-1),-1)
title_names_2 <- str_split(title_names_2, " ", n=2)
title_names_2 <- unlist(lapply(title_names_2, function(x) {x[2]}))

title <- c(title_names_1, title_names_2)

year_1 <- html_1 |> html_elements(".sc-43986a27-8.jHYIIK.dli-title-metadata-item:nth-child(1)")
year_1 <- html_text(year_1)
year_1 <- as.numeric(year_1)

year_2 <- html_2 |> html_elements(".sc-43986a27-8.jHYIIK.dli-title-metadata-item:nth-child(1)")
year_2 <- html_text(year_2)
year_2 <- as.numeric(year_2)

year <- c(year_1, year_2)

# vote
vote_1 <- html_1 |> html_elements(".sc-53c98e73-0.kRnqtn")
vote_1 <- html_text(vote_1)
vote_1  <- as.numeric(gsub("\\D", "", vote_1 ))

vote_2 <- html_2 |> html_elements(".kRnqtn")
vote_2 <- html_text(vote_2)
vote_2  <- as.numeric(gsub("\\D", "", vote_2 ))

vote <- c(vote_1, vote_2)

#ratings
rating_1 <- html_1 |> html_elements(".ipc-rating-star.ipc-rating-star--base.ipc-rating-star--imdb.sc-9ab53865-1.iXEijC.ratingGroup--imdb-rating")
rating_1 <- html_text(rating_1)
rating_1  <- as.numeric(str_sub(rating_1, 1, 3))

rating_2 <- html_2 |> html_elements(".ipc-rating-star.ipc-rating-star--base.ipc-rating-star--imdb.sc-9ab53865-1.iXEijC.ratingGroup--imdb-rating")
rating_2 <- html_text(rating_2)
rating_2  <- as.numeric(str_sub(rating_2, 1, 3))

rating <- c(rating_1, rating_2)

#duration I got help from my friend and ChatGpt
duration_1 <- html_1 |> html_elements (".sc-43986a27-8.jHYIIK.dli-title-metadata-item:nth-child(2)")
duration_1 <- html_text(duration_1)

duration_2 <- html_2 |> html_elements (".sc-43986a27-8.jHYIIK.dli-title-metadata-item:nth-child(2)")
duration_2 <- html_text(duration_2)

convert_time_to_minutes <- function(time_strings) {
  total_minutes <- numeric(length(time_strings))
  
  for (i in seq_along(time_strings)) {
    parts <- strsplit(time_strings[i], "h|m")[[1]]
    hours <- as.numeric(parts[1])
    minutes <- as.numeric(parts[2])
    
    total_minutes[i] <- hours * 60 + minutes
  }
  
  return(total_minutes)
}
total_minutes_result_1 <- convert_time_to_minutes(duration_1)
total_minutes_result_2 <- convert_time_to_minutes(duration_2)

duration <- c(total_minutes_result_1, total_minutes_result_2)

movie_data <- data.frame(title, year, duration, rating, vote)
print(movie_data)

```

3\. Exploratory Data Analysis

3.1. Top and Bottom 5 Movies by Ranking

```{r}
movie_data <- data.frame(title, year, duration, rating, vote)
movie_data <- arrange(movie_data, desc(rating))

top5_movies <- head(movie_data, 5)

last5_movies <- tail(movie_data, 5)

kable(rbind(top5_movies, last5_movies), caption = "Best and Worst 5 Movies") 

```

I watched all of the top 5 movies except Tosun Pasa. Old movies like Hababam Sınıfı has a place for everyone but II believe there are other Turkish Movies that should be on the list.

For the worst 5 movies, I felt sorry for the actors who play on those movies. I haven’t watched any of them but their titles do not look very appealing.

3.2

My favourite Turkish Movies are,

Hokkabaz,

Babam ve Oglum,

and a recent watch but Ölümlü Dünya 2.

```{r}
favourite_movies <- c("Hokkabaz", "Babam ve Oglum", "Ölümlü Dünya 2")

favourite_movies_data <- movie_data[movie_data$title %in% favourite_movies, ]

kable(rbind(favourite_movies_data), caption = "My Favorite Movies")

```

3.3 Visualization

```{r}
avg_rating_by_year <- movie_data %>%
         group_by(year) %>%
         summarise(avg_rating = mean(rating))

ggplot(avg_rating_by_year, aes(x= year, y= avg_rating)) + geom_point()

```

The graphic shows that average ratings fall as the number of years increases.

```{r}
ggplot(movie_data, aes(x = year, y = rating, group = year)) + geom_boxplot()
```

3.4. Do you believe there is a relationship between the number of votes a movie received and its rating? Investigate the correlation between Votes and Ratings.

```{r}
cor(movie_data$vote, movie_data$rating)
```

The correlation coefficient of 0.1310893 indicates a weak positive linear relationship between the number of votes a movie received and its rating. While there is some positive association, the strength of the relationship is relatively weak.

3.5. Do you believe there is a relationship between a movie's duration and its rating? Investigate the correlation between Duration and Ratings.

```{r}
cor(movie_data$duration, movie_data$rating)
```

The correlation coefficient is NA, indicating that a correlation couldn't be calculated between the number of votes and ratings.

4\. Turkish Movies in the Top 1000 on IMDb

```{r}
url_vec_3 <- "https://m.imdb.com/search/title/?title_type=feature&groups=top_1000&country_of_origin=TR&count=250"

html_3 <- read_html(url_vec_3)

#title
title_names_3 <- html_3 |> html_elements(".ipc-title__text")
title_names_3 <- html_text(title_names_3)
title_names_3 <- tail(head(title_names_3,-1),-1)
title_names_3 <- str_split(title_names_3, " ", n=2)
title_names_3 <- unlist(lapply(title_names_3, function(x) {x[2]}))

title <- title_names_3

#year

year_3 <- html_3 |> html_elements(".sc-43986a27-8.jHYIIK.dli-title-metadata-item:nth-child(1)")
year_3 <- html_text(year_3)
year_3 <- as.numeric(year_3)

year <- year_3

top1000_dataf <- data.frame(title, year)

kable(rbind(top1000_dataf), caption= "Turkish Movies in IMDB Top 1000")

```

```{r}
final_dataf <- movie_data%>%
  inner_join(top1000_dataf, by = c("title", "year"))

kable(rbind(final_dataf), caption= "Turkish Movies in IMDB Top 1000")

final_dataf <- arrange(final_dataf, desc(rating))
kable(rbind(final_dataf), caption= "Turkish Movies in IMDB Top 1000 by Ranked")


```
